<template>
  <view class="page__bd bg__white">
    <view class="weui-flex flex-align-center bg__search">
      <view class="color-blue searchbar-text">
        <picker bindchange="bindChange" value="{{pickerChoose}}" range="{{pickerArray}}" range-key="{{'sitePropertyName'}}">
          <view class="picker">
            <text class="all-read">{{pickerArray[pickerChoose].sitePropertyName}}</text>
          </view>
        </picker>
      </view>
      <view class="weui-flex__item">
        <SearchBar :placeholder="placeholder" @childFn.user="parentSearch"></SearchBar>
      </view>
    </view>
    <map id="siteMap" style="height:{{height}}px;" longitude="{{longitude}}" latitude="{{latitude}}" scale="14" markers="{{markers}}" bindmarkertap="markertap" show-location></map>
    <cover-view class="location" bindtap="location">
      <cover-image class="img" src="/images/icons/location.png" />
    </cover-view>
    <view hidden="{{hidden}}" catchtouchmove='preventTouchMove'>
      <view class="layer" catchtouchstart="removeLayer"></view>
      <view class="weui-dialog">
        <view class="weui-dialog__hd">
          <text class="weui-dialog__title">站点详情</text>
        </view>
        <view class="weui-dialog__bd">
          <view class="weui-dialog__text">站点类别：{{markerItem.sitePropertyName}}</view>
          <view class="weui-dialog__text">站点名称：{{markerItem.siteName}}</view>
          <view class="weui-dialog__text">站点地址：{{markerItem.siteAddress}}</view>
          <view class="weui-dialog__text">部门名称：{{markerItem.happenDeptName}}</view>
        </view>
        <view class="weui-dialog__ft">
          <button class="weui-btn mini-btn" type="primary" size="mini" data-id="{{markerItem.id}}" @tap="dealWith">维护</button>
          <button class="weui-btn mini-btn" type="warn" size="mini" @tap="removeLayer">取消</button>
        </view>
      </view>
    </view>
    <Tabbar></Tabbar>
  </view>
</template>

<script>
import wepy from "wepy";
import { service } from "../../config.js";
import base from "../../mixins/base";
import http from "../../mixins/http";
import location from "../../mixins/location";
import SearchBar from "../../components/searchbar";
import Tabbar from "../../components/tabbar";

export default class TaskItemsList extends wepy.page {
  mixins = [base, http, location];
  config = {
    navigationBarTitleText: "站点列表"
  };
  data = {
    height: 550,
    tkID: "",
    placeholder: "搜索",
    longitude: "",
    latitude: "",
    latitudeBegin: "",
    latitudeEnd: "",
    longitudeBegin: "",
    longitudeEnd: "",
    markers: [],
    markerItem: {},
    hidden: true,
    pickerArray: [],
    pickerChoose: 0,
    siteProperty: ""
  };
  components = {
    Tabbar,
    SearchBar
  };
  methods = {
    location() {
      const that = this;
      this.mapCtx.includePoints({
        padding: [10],
        points: [
          {
            latitude: that.latitude,
            longitude: that.longitude
          }
        ]
      });
    },
    bindChange(e) {
      this.start = 1;
      this.pickerChoose = e.detail.value;
      this.siteProperty = this.pickerArray[e.detail.value].sitePropertyID;
      this.noMoreList = false;
      this.getList();
      this.$apply();
    },
    preventTouchMove(e) {},
    removeLayer() {
      this.hidden = !this.hidden;
    },
    markertap(e) {
      console.log(e);
      this.hidden = false;
      this.markerItem = this.markers.find(function(x) {
        return x.id === e.markerId;
      });
      this.$apply();
    },
    dealWith(e) {
      wepy.navigateTo({
        url: "/pages/home/site-items-check?id=" + e.currentTarget.dataset.id
      });
    },
    parentSearch(title, evt) {
      this.taskName = title;
      this.getList();
    }
  };
  getList() {
    this.$post(
      {
        url: service.get_list_MaintenanceSite,
        data: {
          tkID: this.tkID,
          latitudeBegin: this.latitudeBegin,
          latitudeEnd: this.latitudeEnd,
          longitudeBegin: this.longitudeBegin,
          longitudeEnd: this.longitudeEnd,
          taskName: this.taskName || "",
          siteProperty: this.siteProperty
        }
      },
      {
        success: ({ code, data }) => {
          this.markers = data.dataRows;
          for (let index = 0; index < data.dataRows.length; index++) {
            this.markers[index].iconPath =
              "/images/map/" + this.markers[index].imagePath;
            this.markers[index].width = 20;
            this.markers[index].height = 20;
          }
          this.pickerArray = data.sitePropertyList;
          this.$apply();
        }
      }
    );
  }
  getRegion() {
    const that = this;
    this.mapCtx.getRegion({
      success: function(res) {
        that.latitudeBegin = res.southwest.latitude;
        that.latitudeEnd = res.northeast.latitude;
        that.longitudeBegin = res.southwest.longitude;
        that.longitudeEnd = res.northeast.longitude;
        that.getList();
      }
    });
  }
  onReady(e) {
    const that = this;
    wepy.getSystemInfo({
      success: function(res) {
        that.height = res.windowHeight - 90;
        that.$apply();
      }
    });
    this.$getLocation(function(location) {
      that.longitude = location.longitude;
      that.latitude = location.latitude;
      that.$apply();
    });
    this.mapCtx = wepy.createMapContext("siteMap", this);
    this.getRegion();
  }
  onLoad(options) {
    this.tkID = this.$parent.globalData.tkID;
  }
}
</script>

<style lang="css">
#siteMap {
  width: 100%;
}
.location .img {
  width: 60rpx;
  height: 60rpx;
  position: absolute;
  left: 20rpx;
  bottom: 100rpx;
}
.layer {
  width: 100%;
  height: 100%;
  position: fixed;
  left: 0;
  top: 0;
  z-index: 10;
  background: rgba(0, 0, 0, 0.5);
}
.weui-dialog {
  width: 80%;
  position: fixed;
  top: 50%;
  left: 50%;
  -webkit-transform: translate(-50%, -50%);
  transform: translate(-50%, -50%);
  background-color: #ffffff;
  text-align: left;
  border-radius: 3px;
  overflow: hidden;
  z-index: 11;
}
.weui-dialog__hd {
  padding: 1.3em 1.6em 0.5em;
}
.weui-dialog__title {
  font-weight: 400;
  font-size: 18px;
}
.weui-dialog__bd {
  padding: 0 1.6em 0.8em;
  min-height: 40px;
  font-size: 15px;
  line-height: 1.3;
  word-wrap: break-word;
  word-break: break-all;
  color: #808080;
}
.weui-dialog__ft {
  position: relative;
  line-height: 48px;
  font-size: 18px;
  text-align: center;
}
.mini-btn {
  margin: 0 10rpx;
}
</style>
