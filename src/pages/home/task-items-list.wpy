<template>
<view class="page__bd bg__white">
  <view class="weui-flex flex-align-center bg__search">
    <view class="color-blue searchbar-text" wx:if="{{taskType == 0}}">
      <navigator class="all-read" url="/pages/other/op-type-list?id={{siteID}}" hover-class="navigator-hover">
        <block wx:if="{{opType2Name}}">{{opType2Name}}</block>
        <block wx:else>任务筛选</block>
      </navigator>
    </view>
    <view class="weui-flex__item">
      <SearchBar :placeholder="placeholder" @childFn.user="parentSearch"></SearchBar>
    </view>
  </view>
  <!-- <button type="primary" bindtap="getRegion">获取范围</button> -->
  <map id="map" style="height:{{height}}px;" longitude="{{longitude}}" latitude="{{latitude}}" markers="{{markers}}" bindmarkertap="markertap" scale="14" show-location>
        <cover-image bindtap="location" class="location" src="/images/icons/location.png" />
          <cover-view  hidden="{{hidden}}" class="layer" bindtap="removeLayer"></cover-view>
          <cover-view hidden="{{hidden}}" class="weui-dialog">
            <block wx:if="{{taskType == 0}}">
                <cover-view class="weui-dialog__hd weui-flex">
                  <cover-view class="weui-dialog__title weui-flex__item">任务详情</cover-view>
                  <cover-image class="img" src="/images/tabbars/delete.png"  @tap="removeLayer" />
                </cover-view>
                <cover-view class="weui-dialog__bd">
                  <cover-view class="weui-dialog__text">任务类型：{{markerItem.name}}</cover-view>
                  <cover-view class="weui-dialog__text">站点名称：{{markerItem.siteName}}</cover-view>
                  <cover-view class="weui-dialog__text">巡检责任人：{{markerItem.userName}}</cover-view>
                  <cover-view class="weui-dialog__text">要求日期：{{markerItem.planFinishDate}}</cover-view>
                </cover-view>
                <cover-view class="weui-dialog__ft weui-flex">
                  <cover-view class="weui-flex__item mini-btn" data-id="{{markerItem.id}}" data-type="0" @tap="dealWith">处理</cover-view>
                  <cover-view class="weui-flex__item mini-btn" @tap="removeLayer">取消</cover-view>
                </cover-view>
            </block>
            <block wx:else>
                <cover-view class="weui-dialog__hd weui-flex">
                  <cover-view class="weui-dialog__title weui-flex__item">任务处理</cover-view>
                  <cover-image class="img" src="/images/tabbars/delete.png"  @tap="removeLayer" />
                </cover-view>
                <cover-view class="weui-dialog__bd">
                  <cover-view class="weui-dialog__text">站点名称：{{markerItem.siteName }}</cover-view>
                  <cover-view class="weui-dialog__text">标记人：{{markerItem.userName}}</cover-view>
                  <cover-view class="weui-dialog__text">标记时间：{{markerItem.pubTime}}</cover-view>
                  <cover-view class="weui-dialog__text">标记内容：{{markerItem.name}}</cover-view>
                </cover-view>
                <cover-view class="weui-dialog__ft weui-flex">
                  <cover-view class="weui-flex__item mini-btn" data-id="{{markerItem.id}}" @tap="dealWith" data-type="2">转成日志</cover-view>
                  <cover-view class="weui-flex__item mini-btn" data-id="{{markerItem.id}}" @tap="shareMark">分享</cover-view>
                  <cover-view class="weui-flex__item mini-btn" data-id="{{markerItem.id}}" @tap="deleteMark">删除</cover-view>
                </cover-view>
            </block>
          </cover-view>
  </map>

  <!-- <cover-view hidden="{{hidden}}" catchtouchmove='preventTouchMove'>
    <cover-view class="layer" catchtouchstart="removeLayer"></cover-view>
    <cover-view class="weui-dialog" wx:if="{{taskType == 0}}">
      <cover-view class="weui-dialog__hd">
        <cover-view class="weui-dialog__title">任务详情</cover-view>
      </cover-view>
      <cover-view class="weui-dialog__bd">
        <cover-view class="weui-dialog__text">任务类型：{{markerItem.name}}</cover-view>
        <cover-view class="weui-dialog__text">站点名称：{{markerItem.siteName}}</cover-view>
        <cover-view class="weui-dialog__text">巡检责任人：{{markerItem.userName}}</cover-view>
        <cover-view class="weui-dialog__text">要求日期：{{markerItem.planFinishDate}}</cover-view>
      </cover-view>
      <cover-view class="weui-dialog__ft">
        <cover-view class="weui-btn mini-btn" type="primary" size="mini" data-id="{{markerItem.id}}" data-type="0" @tap="dealWith">处理</cover-view>
        <cover-view class="weui-btn mini-btn" type="warn" size="mini" @tap="removeLayer">取消</cover-view>
      </cover-view>
    </cover-view>
    <cover-view class="weui-dialog" wx:else>
      <cover-view class="weui-dialog__hd">
        <cover-view class="weui-dialog__title">标记详情</cover-view>
      </cover-view>
      <cover-view class="weui-dialog__bd">
        <cover-view class="weui-dialog__text">站点名称：{{markerItem.siteName }}</cover-view>
        <cover-view class="weui-dialog__text">标记人：{{markerItem.userName}}</cover-view>
        <cover-view class="weui-dialog__text">标记时间：{{markerItem.pubTime}}</cover-view>
        <cover-view class="weui-dialog__text">标记内容：{{markerItem.name}}</cover-view>
      </cover-view>
      <cover-view class="weui-dialog__ft">
        <cover-view class="weui-btn mini-btn" type="primary" size="mini" data-id="{{markerItem.id}}" @tap="dealWith" data-type="2">转成日志</cover-view>
        <cover-view class="weui-btn mini-btn" type="default" size="mini" data-id="{{markerItem.id}}" @tap="shareMark">分享</cover-view>
        <cover-view class="weui-btn mini-btn" type="warn" size="mini" data-id="{{markerItem.id}}" @tap="deleteMark">删除</cover-view>
      </cover-view>
    </cover-view>
  </cover-view> -->
  <Tabbar></Tabbar>
</view>
</template>

<script>
import wepy from "wepy";
import {
  service
} from "../../config.js";
import base from "../../mixins/base";
import http from "../../mixins/http";
import location from "../../mixins/location";
import SearchBar from "../../components/searchbar";
import Tabbar from "../../components/tabbar";
import events from "../../utils/event";

export default class TaskItemsList extends wepy.page {
  mixins = [base, http, location];
  config = {
    navigationBarTitleText: "我的任务项"
  };
  data = {
    height: 550,
    shareID: "",
    tkID: "",
    placeholder: "搜索",
    longitude: "",
    latitude: "",
    latitudeBegin: "",
    latitudeEnd: "",
    longitudeBegin: "",
    longitudeEnd: "",
    siteProperty: "",
    opType2Name: "",
    taskType: 0,
    markers: [],
    markerItem: {},
    hidden: true
  };
  components = {
    Tabbar,
    SearchBar
  };
  methods = {
    preventTouchMove(e) {},
    location() {
      const that = this;
      this.mapCtx.includePoints({
        padding: [10],
        points: [{
          latitude: that.latitude,
          longitude: that.longitude
        }]
      });
    },
    removeLayer() {
      this.hidden = !this.hidden;
    },
    markertap(e) {
      console.log();
      this.hidden = false;
      this.markerItem = this.markers.find(function(x) {
        return x.id === e.markerId;
      });
      this.$apply();
    },
    dealWith(e) {
      const type = this.getNumber(e.currentTarget.dataset.type);
      let url = "";
      switch (type) {
        case 0:
          url = "/pages/home/task-items-check";
          break;
        case 1:
          url = "/pages/home/task-items-check";
          break;
        case 2:
          url = "/pages/new/logs";
          break;
        default:
          break;
      }
      wepy.navigateTo({
        url: url +
          "?id=" +
          e.currentTarget.dataset.id +
          "&taskType=" +
          this.taskType +
          "&longitude=" +
          this.longitude +
          "&latitude=" +
          this.latitude
      });
    },
    parentSearch(title, evt) {
      this.taskName = title;
      this.getList();
    },
    shareMark(e) {
      this.shareID = e.currentTarget.dataset.id;
      wepy.showModal({
        title: "提示",
        content: "请先选择分享用户",
        success: function(res) {
          if (res.confirm) {
            wepy.navigateTo({
              url: "/pages/contacts/checked"
            });
          } else if (res.cancel) {
            console.log("用户点击取消");
          }
        }
      });
    },
    deleteMark(e) {
      const id = e.currentTarget.dataset.id;
      this.getItems(id);
      const that = this;
      wepy.showModal({
        title: "提示",
        content: "要删除该标记吗",
        success: function(res) {
          if (res.confirm) {
            that.$post({
              url: service.get_delete_MaintenanceSign,
              data: {
                tkID: that.tkID,
                id: id,
                jyID: that.markjyID
              }
            }, {
              success: ({
                code,
                data
              }) => {
                wepy.showToast({
                  title: "成功！",
                  icon: "success",
                  duration: 1000
                });
                setTimeout(function() {
                  wepy.redirectTo({
                    url: "./task-items-list?taskType=2"
                  });
                }, 1000);
              }
            });
          } else if (res.cancel) {
            console.log("用户点击取消");
          }
        }
      });
    }
  };
  getChooseOpType(ids, names) {
    this.siteProperty = ids;
    this.opType2Name = names;
    this.getList();
    this.$apply();
  }
  getChooseUser(ids, names) {
    if (!this.shareID) {
      return;
    } else {
      this.$post({
        url: service.get_share_Sign,
        data: {
          tkID: this.tkID,
          id: this.shareID,
          userIDS: ids
        }
      }, {
        success: ({
          code,
          data
        }) => {
          wepy.showToast({
            title: "成功！",
            icon: "success",
            duration: 1000
          });
          setTimeout(function() {
            wepy.redirectTo({
              url: "./task-items-list?taskType=2"
            });
          }, 1000);
        }
      });
    }
  }
  getList() {
    this.$post({
      url: service.get_list_MaintenanceTask,
      data: {
        tkID: this.tkID,
        latitudeBegin: this.latitudeBegin,
        latitudeEnd: this.latitudeEnd,
        longitudeBegin: this.longitudeBegin,
        longitudeEnd: this.longitudeEnd,
        taskType: this.taskType,
        siteProperty: this.siteProperty,
        taskName: this.taskName || ""
      }
    }, {
      success: ({
        code,
        data
      }) => {
        this.markers = data.dataRows;
        for (let index = 0; index < data.dataRows.length; index++) {
          this.markers[index].iconPath =
            "/images/map/" + this.markers[index].imagePath;
          this.markers[index].width = 20;
          this.markers[index].height = 20;
        }
        this.$apply();
      }
    });
  }
  getItems(id) {
    this.$post({
      url: service.get_view_MaintenanceTask,
      data: {
        tkID: this.tkID,
        id: id,
        taskType: 2
      }
    }, {
      success: ({
        code,
        data
      }) => {
        this.markjyID = data.jyID;
      }
    });
  }
  getRegion() {
    const that = this;
    this.mapCtx.getRegion({
      success: function(res) {
        that.latitudeBegin = res.southwest.latitude;
        that.latitudeEnd = res.northeast.latitude;
        that.longitudeBegin = res.southwest.longitude;
        that.longitudeEnd = res.northeast.longitude;
        that.getList();
      }
    });
  }
  onReady(e) {
    const that = this;
    wepy.getSystemInfo({
      success: function(res) {
        that.height = res.windowHeight - 90;
        that.$apply();
      }
    });
    // this.$getLocation().then(function(location) {
    //   that.longitude = location.longitude;
    //   that.latitude = location.latitude;
    //   that.$apply();
    // }).then(
    //   that.getRegion()
    // )
    this.$getLocation(function(location) {
      that.longitude = location.longitude;
      that.latitude = location.latitude;

      that.mapCtx = wepy.createMapContext("map", that)
      setTimeout(function() {
        that.getRegion();
      }, 200);
      that.$apply();
    });
    this.mapCtx = wepy.createMapContext("map", this);
    // this.getRegion();

  }
  onLoad(options) {
    this.tkID = this.$parent.globalData.tkID;

    this.taskType = options.taskType || 0;
    if (this.taskType === "2") {
      wepy.setNavigationBarTitle({
        title: "我的标记项"
      });
    }
    // this.getRegion();
    events.addEvents("getChooseUser", this.getChooseUser, this);
    events.addEvents("getChooseOpType", this.getChooseOpType, this);
    // events.addEvents("getshareMark", this.getshareMark, this);
  }
}
</script>

<style lang="css">
#map {
  width: 100%;
  /* height: 600px; */
}
.location {
  width: 60rpx;
  height: 60rpx;
  position: absolute;
  left: 20rpx;
  bottom: 50rpx;
}
.layer {
  width: 100%;
  height: 100%;
  position: fixed;
  left: 0;
  top: 0;
  z-index: 10;
  background: rgba(0, 0, 0, 0.5);
}
.weui-dialog {
  width: 80%;
  position: fixed;
  top: 50%;
  left: 50%;
  -webkit-transform: translate(-50%, -50%);
  transform: translate(-50%, -50%);
  background-color: #ffffff;
  text-align: left;
  border-radius: 3px;
  overflow: hidden;
  z-index: 11;
}
.weui-dialog__hd {
  padding: 1em 1.6em 0.5em;
}
.weui-dialog__title {
  font-weight: 400;
  font-size: 18px;
}
.weui-dialog__bd {
  padding: 0 1.6em 0.8em;
  min-height: 40px;
  font-size: 15px;
  line-height: 1.3;
  word-wrap: break-word;
  word-break: break-all;
  color: #808080;
}
.weui-dialog__ft {
  position: relative;
  line-height: 48px;
  font-size: 18px;
  text-align: center;
  border-top: 2rpx solid #e2e2e2;
}
.mini-btn {
  padding: 20rpx 0;
  border: 2rpx solid #e2e2e2;
  box-sizing: border-box;
}
.mini-btn:first-child {
  border-left: none;
}
.img {
  width: 40rpx;
  height: 40rpx;
}
</style>
